#!/usr/bin/env python3

import asyncio
from functools import partial
import multiprocessing
from signal import SIGINT, SIGTERM, signal

ROOM_NAMES = ['room1', 'room2']


def signal_handler(chatango_bot):
    chatango_bot.disconnect()

def signal_handler_null(*args):
    pass


from chatangobot.core.manager import Manager

def worker_callback(room):
    loop = asyncio.get_event_loop()
    try:
        bot = Manager(loop=loop, pm=True)

        loop.add_signal_handler(SIGINT, partial(signal_handler, bot))
        loop.add_signal_handler(SIGTERM, partial(signal_handler, bot))

        loop.run_until_complete(bot.connect(room))

        # Wait all tasks
        loop.run_until_complete(asyncio.gather(*asyncio.Task.all_tasks()))
    finally:
        loop.close()


if __name__ == '__main__':
    for room_name in ROOM_NAMES:
        worker = multiprocessing.Process(target=worker_callback,
                args=[room_name])

        worker.start()

    # Disable master process signal handlers
    signal(SIGINT, signal_handler_null)
    signal(SIGTERM, signal_handler_null)
